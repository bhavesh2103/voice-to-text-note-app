---

# 🎤 Voice-to-Text Note App (Go + React + Deepgram)

A lightweight full-stack app that lets users **record voice notes**, **preview them**, and **transcribe them into text** using Deepgram AI. Built with Go (backend) and React (frontend), this project is fast, efficient, and perfect for voice journaling, note-taking, and more.

---

## 🚀 Features

- 🎙️ Record audio directly from browser  
- 🎚️ Select microphone input  
- 🎧 Preview recordings before transcribing  
- ⏳ Transcribe later option (manual trigger)  
- 🧠 Real-time transcription via Deepgram  
- 🗃️ Stores last 3 recordings in memory (frontend)  
- 💾 Saves transcripts in SQLite (backend)  
- ⚙️ Simple REST API (Go-based)  
- 🌐 CORS-enabled for local dev  

---

## 🧱 Tech Stack

| Layer     | Tech                     |
|-----------|--------------------------|
| Frontend  | React + Vite + Tailwind  |
| Backend   | Go (Golang)              |
| Database  | SQLite                   |
| AI API    | Deepgram (speech-to-text)|
| Tools     | FFmpeg (for audio conversion) |

---

## 🛠️ Setup Instructions

### 🔹 1. Clone the project

git clone https://github.com/yourname/voice-to-text-note-app.git  
cd voice-to-text-note-app

---

### 🔹 2. Backend Setup (Go)

cd backend/  
go mod tidy  
go run main.go

**Notes:**
- Ensure **FFmpeg** is installed and added to your system `PATH`
- Open `handlers/transcribe.go` and add your Deepgram API key:

  const deepgramAPIKey = "YOUR_DEEPGRAM_API_KEY"

- A local SQLite database (`notes.db`) will be created automatically on first run

---

### 🔹 3. Frontend Setup (React)

cd voice-to-text-frontend/  
npm install  
npm run dev

Access the frontend at: **http://localhost:5173**  
Backend runs at: **http://localhost:8080**

---

## 🌐 API Endpoints

| Method | Endpoint         | Description                            |
|--------|------------------|----------------------------------------|
| POST   | `/transcribe`    | Upload audio and receive transcript    |
| GET    | `/recordings`    | Fetch all stored transcripts from DB   |

---

## ✨ How It Works

1. User records voice using their selected microphone.  
2. After stopping:
   - They can preview the recording
   - Choose to "Transcribe Now" or skip for later  
3. The transcription is done via Deepgram’s speech-to-text API.  
4. The result is stored in the backend (SQLite).  
5. The frontend keeps the last 3 recordings in memory for preview.

---

## 🧠 Potential Future Features

- Add tags or titles to voice notes  
- Full transcript history UI (loaded from backend)  
- Audio download / delete options  
- Summarization using GPT or Claude  
- Multi-user support & authentication  
- PWA or Desktop app with Tauri/Electron  

---

## 🤝 Built With

- Go  
- React  
- Tailwind CSS  
- Deepgram  
- FFmpeg  

---

## 📜 License

MIT License — free to use, modify, and distribute.

